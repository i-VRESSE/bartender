version: '3.9'

# TODO this file is a combination of ./docker-compose.yml
# and ../dirac_tests/docker-compose.yml
# would be nice to not duplicate the code

services:
  dirac-tuto:
    image: ghcr.io/xenon-middleware/dirac:8.0.18
    privileged: true
    hostname: dirac-tuto
  api:
    build:
      context: ..
      dockerfile: ./deploy/Dockerfile.dirac
    image: bartender-with-dirac:${BARTENDER_VERSION:-latest}
    ports:
    - "8000:8000"
    # restart: always
    env_file:
    - ../.env
    depends_on:
      db:
        condition: service_healthy
      dirac-tuto:
        condition: service_started
    environment:
      BARTENDER_HOST: 0.0.0.0
      BARTENDER_DB_HOST: bartender-db
      BARTENDER_DB_PORT: 5432
      BARTENDER_DB_USER: bartender
      BARTENDER_DB_PASS: bartender
      BARTENDER_DB_BASE: bartender
    volumes:
    - type: bind
      source: ../config.yaml
      target: /app/src/config.yaml

  db:
    image: postgres:15.2-bullseye
    hostname: bartender-db
    environment:
      POSTGRES_PASSWORD: "bartender"
      POSTGRES_USER: "bartender"
      POSTGRES_DB: "bartender"
    volumes:
    - bartender-db-data:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: pg_isready -U bartender
      interval: 2s
      timeout: 3s
      retries: 40

  migrator:
    image: bartender-with-dirac:${BARTENDER_VERSION:-latest}
    restart: "no"
    command: '"alembic upgrade head"'
    environment:
      BARTENDER_DB_HOST: bartender-db
      BARTENDER_DB_PORT: 5432
      BARTENDER_DB_USER: bartender
      BARTENDER_DB_PASS: bartender
      BARTENDER_DB_BASE: bartender
    depends_on:
      db:
        condition: service_healthy
    volumes:
    - type: bind
      source: ../config.yaml
      target: /app/src/config.yaml

volumes:
  bartender-db-data:
    name: bartender-db-data
